/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    behaviors {
        smart_shift: smart_shift {
            compatible = "zmk,behavior-mod-morph";
            label = "SMART_SHIFT";
            bindings = <&sk LSHFT>, <&caps_word>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB       &kp Q  &kp W  &kp E                       &kp R        &kp T                 &kp Y            &kp U        &kp I         &kp O    &kp P     &kp BACKSPACE
&kp LCTRL     &kp A  &kp S  &kp D                       &kp F        &kp G                 &kp H            &kp J        &kp K         &kp L    &kp SEMI  &kp APOSTROPHE
&smart_shift  &kp Z  &kp X  &kp C                       &kp V        &kp B                 &kp N            &kp M        &kp COMMA     &kp DOT  &kp FSLH  &kp ESC
                            &mt LEFT_ALT LC(BACKSPACE)  &lt 2 SPACE  &mt LEFT_WIN ENTER    &mt RCTRL ENTER  &lt 1 SPACE  &lt 3 DELETE
            >;
        };

        numbers_arrows {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp GRAVE  &kp N1        &kp N2  &kp N3  &kp N4     &kp N5            &kp N6          &kp N7         &kp N8        &kp N9     &kp N0  &kp BACKSPACE
&kp TILDE  &kp NUMBER_4  &kp N5  &kp N6  &trans     &kp MINUS         &kp LEFT_ARROW  &kp DOWN       &kp UP_ARROW  &kp RIGHT  &trans  &kp RC(Z)
&kp LSHFT  &kp N7        &kp N8  &kp N9  &kp N0     &kp UNDERSCORE    &kp HOME        &kp PAGE_DOWN  &kp PAGE_UP   &kp END    &trans  &trans
                                 &trans  &kp LG(Z)  &kp LS(LG(Z))     &trans          &trans         &trans
            >;
        };

        symbols {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL          &kp AT             &kp HASH              &kp DLLR               &kp PRCNT    &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR      &kp BACKSPACE
&kp LCTRL  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp MINUS    &kp MINUS  &kp EQUAL  &trans           &kp PIPE  &kp UP_ARROW  &kp BACKSLASH
&kp LSHFT  &kp LEFT_BRACE    &kp RIGHT_BRACE    &trans                &trans                 &kp UNDER    &kp UNDER  &kp PLUS   &trans           &kp LEFT  &kp DOWN      &kp RIGHT
                                                &trans                &trans                 &trans       &trans     &trans     &trans
            >;
        };

        bluetooth_media {
            bindings = <
&trans        &trans         &trans        &trans        &trans        &trans           &trans  &trans  &trans  &trans      &kp C_BRIGHTNESS_INC  &kp C_VOLUME_UP
&bt BT_CLR    &bt BT_SEL 0   &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4     &trans  &trans  &trans  &trans      &kp C_BRIGHTNESS_DEC  &kp C_VOLUME_DOWN
&out OUT_TOG  &bt BT_DISC 0  &trans        &trans        &trans        &trans           &trans  &trans  &trans  &kp C_PREV  &kp C_NEXT            &kp C_PLAY_PAUSE
                                           &trans        &kp LC(Z)     &kp LS(LC(Z))    &trans  &trans  &trans
            >;
        };
    };
};
